
if (window.location.href.indexOf('checkout') >= 0) {

	$('.sidebar .sidebar-content .order-summary-section.order-summary-section-product-list .product-table').remove()
	$('.sidebar .sidebar-content .order-summary-section.order-summary-section-total-lines').remove()
	$('.sidebar .sidebar-content .order-summary-section.order-summary-section-discount').remove()
	$('.order-summary.order-summary-is-collapsed').remove()
	$('span.total-recap-final-price').remove()
	$('.order-summary-toggle').remove();
	$('.step-footer-previous-link').remove();
	$('.section-content-text').remove();
	$('span.radio-accessory.content-box-emphasis').hide()
	$('#customer_shipping_province').val('50');
	$("#billing_address_address1").attr('readonly','true');
	$("#billing_address_full_name").attr("placeholder", "Nhập tên người nhận...");
	$("#billing_address_phone").attr("placeholder", "Nhập số điện thoại...");
	$("[for='billing_address_full_name']").text('Người nhận');
	$("[for='billing_address_address1']").text('Giao đến');
	$('#billing_address_address1').parent().parent().css('width', '100%');

	$('.banner').append('<div class="banner-text"><span><a href="/cart">Giỏ hàng</a><span>Thông tin giao hàng</span></span></div>')

	const existUser = JSON.parse(localStorage.getItem('info_user_logined') || '{}');
	if (existUser?.last_name || existUser?.first_name) {
		$('#billing_address_full_name').val(`${existUser.last_name} ${existUser.first_name}`);
	}

	if (existUser?.phone) {
		$('#billing_address_phone').val(existUser?.phone?.phone_number);
		$('#billing_address_phone').focus();
	}

	

	const delivery_info = JSON.parse(localStorage.getItem('delivery-info'));

	const dataSend = {
		"delivery_info": {
			"province": "",
			"full_address": "",
			"district": "",
			"title": "",
			"national": "",
			"gate": "H",
			"street": "",
			"city": "Thành phố Hồ Chí Minh",
			"map_id": "",
			"house_number": "",
			"long": 0,
			"type": 0,
			"title_address": "",
			"house_detail": "",
			"name": "",
			"phone": {
				"region_code": "",
				"phone_number": ""
			},
			"distance": "",
			"ward": "",
			"note": "",
			"lat": 0
		},
		"src": "TCH-WEB",
		"type": "DELI",
		"adjustments": [],
		orderlines: [],
		"note": "",
		"quantity": 0,
		"payments": [
			{
				"key": "COD",
				"method": "COD"
			}
		]
	}

	if (delivery_info) {
		dataSend.delivery_info = {...dataSend.delivery_info, ...delivery_info}
		dataSend.delivery_info.phone = {
			"region_code": "",
			"phone_number": ""
		}
		dataSend.delivery_info.floor = 0;
		dataSend.delivery_info.room = 0
	}



	var orderlines;
	var orderlines_nationwide;

	$.ajax({
		type: 'post',
		url: 'https://thecoffeehouse.com/cart.js',
		contentType: 'application/json',
		processData: false,
		data: JSON.stringify(dataSend)
	});

	dataSend.delivery_info.national	= delivery_info.city;
	dataSend.delivery_info.province	= delivery_info.province;
	dataSend.delivery_info.district	= delivery_info.district;
	dataSend.delivery_info.ward	= delivery_info.ward;
	dataSend.delivery_info.street	= delivery_info.street;
	dataSend.delivery_info.full_address	= delivery_info.full_address;
	dataSend.delivery_info.house_number	= delivery_info.house_number;
	dataSend.delivery_info.full_address	= delivery_info.full_address;
	$('#billing_address_address1').val(delivery_info.full_address);
	var getCart= $.ajax({
		url: 'https://thecoffeehouse.com/cart.js',
		dataType: 'json',
		contentType: 'application/json'
	  }),
	  calculateOrders = getCart.then(function(data) {
		for (let i = 0; i < data.items.length; i++){
			let item_properties = data.items[i].properties
			let item = JSON.parse(item_properties.item)
			let topping;
			if(item_properties.topping) {
				topping = JSON.parse(item_properties.topping)
			}

			let order =  {
				"quantity": data.items[i].quantity,
				"note": item?.note_product,
				"id": item.sku,
				"extra": [
					{
						"code": item.barcode.toString(),
						"id": item.barcode.toString(),
						"group_id": 0
					}
				],
				"category_type": 0,
				"name": item.name
			}

			if (topping){
				for (let i = 0; i < topping.length; i++) {
					let _topping =  {
						"code": topping[i].barcode,
						"id": topping[i].barcode,
						"group_id": 1
					}
					order.extra.push(_topping)
				}
			}

			dataSend.orderlines.push(order);
		}
		return $.ajax({
			type: 'post',
			url: 'https://web-staging.thecoffeehouse.com/haravan/orders/calculate',
			contentType: 'application/json',
			processData: false,
			data: JSON.stringify(dataSend)
		});
	});
	calculateOrders.done(function(response) {
		if (response.data.order && response.data.order.orderlines){
			orderlines = response.data.order.orderlines;
		}

		if (response.data.order && response.data.order.orderlines_nationwide){
			orderlines_nationwide = response.data.order.orderlines_nationwide;
		}
		console.log(response)
		$('.sidebar .sidebar-content').append('<h2>Đơn hàng</h2>');
		if (orderlines.length > 0 && orderlines_nationwide.length > 0) {
			$('.sidebar .sidebar-content').append('<p>Đơn hàng sẽ được giao làm hai lần do sản phẩm ở hai kho khác nhau</p>');
		}
		if (orderlines.length > 0){
			var layoutOrderlines = buildLayout('orderlines',response.data.order);
			$('.sidebar .sidebar-content').append(layoutOrderlines)
		}
		if (orderlines_nationwide.length > 0){
			var layoutOrderlinesNationwide = buildLayout('orderlines_nationwide',response.data.order);
			$('.sidebar .sidebar-content').append(layoutOrderlinesNationwide)
		}

		let totalAmountLayout = '<div class="total-amount">'+
		'                            <div class="detail-money"">'+
		'								<div class="line-money">'+
		'                                    <p class="money-name">'+
		'                                        <span>Tạm tính</span>'+
		'                                        <span class="line-item-price">{total_amount}</span>'+
		'                                    </p>'+
		'                                    <p class="money-name">'+
		'                                        <span>Phí vận chuyển</span>'+
		'                                        <span class="line-item-price">{total_ship}</span>'+
		'                                    </p>'+
		'                                </div>'+
		'                                <div class="total-money">'+
		'                                    <p class="money-name">'+
		'                                        <span>Tổng tiền</span>'+
		'                                        <span class="line-item-price total">{after_discount_amount}</span>'+
		'                                    </p>'+
		'                                </div>'
		'                            </div>'+
		'                        </div>';


		if (orderlines.length > 0 && orderlines_nationwide.length > 0) {
			totalAmountLayout = totalAmountLayout.replace(/{total_amount}/g, formatMoney(response.data.order.total_amount * 100)+"đ")
			totalAmountLayout = totalAmountLayout.replace(/{after_discount_amount}/g, formatMoney(response.data.order.after_discount_amount * 100)+"đ")
			totalAmountLayout = totalAmountLayout.replace(/{total_ship}/g, formatMoney(response.data.order.total_ship * 100)+"đ")

			$('.sidebar .sidebar-content').append(totalAmountLayout)
		}
	})
	var buildLayout = function (typeOrder,data) {

		let orderlines;
		let fee_ship = 0;
		let time_ship;
		let price;
		let after_discount;

		if(typeOrder==="orderlines") {
			orderlines = data.orderlines;
			time_ship = data.schedule_time.day.text
			if (data.adjustments.length > 0){
				fee_ship = data.adjustments[0].price
			}
			price = data.total
			after_discount = data.after_discount
		}
		if(typeOrder==="orderlines_nationwide") {
			orderlines = data.orderlines_nationwide;
			if (data.adjustments_nationwide.length > 0){
				fee_ship = data.adjustments_nationwide[0].price
			}
			time_ship = data.schedule_time_nationwide.day.text
			price = data.total_nationwide
			after_discount =data.after_discount_nationwide
		}



		let common ='<div class="orderlines-list">'+
		'                            <div class="type-ship">'+
		'                            </div>'+
		'                            <div class="detail-order">'+
		'                            </div>'+
		'                            <div class="detail-money"">'+
		'                            </div>'+
		'                        </div>';
		let layoutTypeShip = '<h3>Nhận hàng trong ngày {time}</h3>'+
		'                                <p>Thời gian dự kiến giao</p>'+
		'                                <p>Phí vận chuyển: {fee_ship}</p>';

		layoutTypeShip = layoutTypeShip.replace(/{time}/g, time_ship)
		layoutTypeShip = layoutTypeShip.replace(/{fee_ship}/g, formatMoney(fee_ship * 100)+"đ")

		let layoutSummary ='<div class="line-money">'+
		'                                    <p class="money-name">'+
		'                                        <span>Tạm tính</span>'+
		'                                        <span class="line-item-price">{price}</span>'+
		'                                    </p>'+
		'                                    <p class="money-name">'+
		'                                        <span>Phí vận chuyển</span>'+
		'                                        <span class="line-item-price">{fee_ship}</span>'+
		'                                    </p>'+
		'                                </div>'+
		'                                <div class="total-money">'+
		'                                    <p class="money-name">'+
		'                                        <span>Tổng tiền</span>'+
		'                                        <span class="line-item-price total">{after_discount}</span>'+
		'                                    </p>'+
		'                                </div>';

		layoutSummary = layoutSummary.replace(/{price}/g, formatMoney(price * 100)+"đ")
		layoutSummary = layoutSummary.replace(/{fee_ship}/g, formatMoney(fee_ship * 100)+"đ")
		layoutSummary = layoutSummary.replace(/{after_discount}/g, formatMoney(after_discount * 100)+"đ")


		let layoutListItem = '';
		const toppingRow =
				'                                    <p>'+
				'                                        <span class="line-item-quantity-invisible">0</span>'+
				'                                        <span class="line-item-topping">{topping}</span>'+
				'                                    </p>'
		const noteRow =
				'                                    <p>'+
				'                                        <span class="line-item-quantity-invisible">0</span>'+
				'                                        <span class="line-item-topping">Ghi chú: {note}</span>'+
				'                                    </p>'
		for (let i =0; i < orderlines.length; i++){
			let item = orderlines[i];
			let topping = [];
			if (item.extra.length > 1){
				for (let j = 1; j < item.extra.length ; j++){
					topping.push(item.extra[j].name)
				}
			}
			let layout = '<div class="line-item">'+
			'                                    <p>'+
			'                                        <span class="line-item-quantity">{quantity}</span>'+
			'                                        <span class="line-item-name"><b>{name}</b></span>'+
			'                                    </p>'+
			'                                    <p>'+
			'                                        <span class="line-item-quantity-invisible">0</span>'+
			'                                        <span class="line-item-size">Size: {size}</span>'+
			'                                        <span class="line-item-price">{price}</span>'+
			'                                    </p>'+
			'										{toppingRow}'+
			'										{noteRow}'+
			'                                </div>';
			layout = layout.replace(/{quantity}/g, item.quantity)
			layout = layout.replace(/{name}/g, item.name)
			layout = layout.replace(/{size}/g, item.extra[0].name)
			layout = layout.replace(/{price}/g, formatMoney(item.base_price * 100)+"đ")
			if (topping.length){
				layout = layout.replace(/{toppingRow}/g, toppingRow)
				layout = layout.replace(/{topping}/g,topping.join(','))
			} else {
				layout = layout.replace(/{toppingRow}/g,'')
			}

			if (item.note) {
				layout = layout.replace(/{noteRow}/g, noteRow)
				layout = layout.replace(/{note}/g,item.note)
			} else {
				layout = layout.replace(/{noteRow}/g,'')
			}
			layoutListItem += layout;
		}
		common = $(common);
		common.find('.type-ship').html(layoutTypeShip)
		common.find('.detail-order').html(layoutListItem)
		common.find('.detail-money').html(layoutSummary)
		return common
	}


	$('#billing_address_address1').click(function(e) {
		alert("Vui lòng quay lại giỏ hàng để thay đổi địa chỉ")
	})

    setInterval(() => {
        var delivery_info =  JSON.parse(localStorage.getItem('delivery-info'));
        $('#customer_shipping_province').val('50');
        $('#billing_address_address1').parent().parent().css('width', '100%');
        $('#billing_address_address1').val(delivery_info.full_address);
        $("#billing_address_address1").attr('readonly','true');
    }, 1000);


	var formatMoney = function(price) {
		return String(price / 100).replace(/(.)(?=(\d{3})+$)/g,'$1,');
	}
}
